{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nconst APIKEY = \"5abb4eb6\";\nexport const getMovieAsynch = createAsyncThunk(async searchValue => {\n  const url = `http://www.omdbapi.com/?s=star-wars&apikey=5abb4eb6`;\n  const response = await fetch(url);\n  const responseJson = await response.json();\n  return responseJson; //   return response.data;\n});\nconsole.log(getMovieAsynch);\nconst movieSlice = createSlice({\n  name: \"getMovie\",\n  initialState: [],\n  reducers: {\n    getMovie: (state, action) => {\n      return state;\n    }\n  } //   extraReducers: {\n  //     [getMovieAsynch.pending]: (state, action) => {\n  //       state.status = \"loading\";\n  //     },\n  //     [getMovieAsynch.fulfilled]: (state, { payload }) => {\n  //       state.list = payload;\n  //       state.status = \"success\";\n  //     },\n  //     [getMovieAsynch.rejected]: (state, action) => {\n  //       state.status = \"failed\";\n  //     },\n  //   },\n\n});\nexport default movieSlice.reducer;","map":{"version":3,"sources":["/home/belka/JS Projects/omdb-react-redux/src/features/getMovieSlice.js"],"names":["createAsyncThunk","createSlice","APIKEY","getMovieAsynch","searchValue","url","response","fetch","responseJson","json","console","log","movieSlice","name","initialState","reducers","getMovie","state","action","reducer"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AAEA,MAAMC,MAAM,GAAG,UAAf;AAEA,OAAO,MAAMC,cAAc,GAAGH,gBAAgB,CAAC,MAAOI,WAAP,IAAuB;AACpE,QAAMC,GAAG,GAAI,qDAAb;AACA,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,QAAMG,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA3B;AACA,SAAOD,YAAP,CAJoE,CAKpE;AACD,CAN6C,CAAvC;AAOPE,OAAO,CAACC,GAAR,CAAYR,cAAZ;AAEA,MAAMS,UAAU,GAAGX,WAAW,CAAC;AAC7BY,EAAAA,IAAI,EAAE,UADuB;AAE7BC,EAAAA,YAAY,EAAE,EAFe;AAG7BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QAAQ,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC3B,aAAOD,KAAP;AACD;AAHO,GAHmB,CAQ/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAnB+B,CAAD,CAA9B;AAuBA,eAAeL,UAAU,CAACO,OAA1B","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n\nconst APIKEY = \"5abb4eb6\";\n\nexport const getMovieAsynch = createAsyncThunk(async (searchValue) => {\n  const url = `http://www.omdbapi.com/?s=star-wars&apikey=5abb4eb6`;\n  const response = await fetch(url);\n  const responseJson = await response.json();\n  return responseJson;\n  //   return response.data;\n});\nconsole.log(getMovieAsynch);\n\nconst movieSlice = createSlice({\n  name: \"getMovie\",\n  initialState: [],\n  reducers: {\n    getMovie: (state, action) => {\n      return state;\n    },\n  },\n//   extraReducers: {\n//     [getMovieAsynch.pending]: (state, action) => {\n//       state.status = \"loading\";\n//     },\n//     [getMovieAsynch.fulfilled]: (state, { payload }) => {\n//       state.list = payload;\n//       state.status = \"success\";\n//     },\n//     [getMovieAsynch.rejected]: (state, action) => {\n//       state.status = \"failed\";\n//     },\n//   },\n});\n\n\nexport default movieSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}