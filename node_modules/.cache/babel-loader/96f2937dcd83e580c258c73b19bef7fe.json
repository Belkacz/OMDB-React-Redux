{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  fav: []\n};\nconst favSlice = createSlice({\n  name: \"favourites\",\n  initialState,\n  reducers: {\n    addFav: (state, action) => {\n      console.log(state.fav);\n\n      if (state.fav.filter(fav => fav.imdbID !== action.payload.imdbID)) {\n        state.fav.push(action.payload);\n      } // state.fav =  [... state.fav , action.payload]\n\n    },\n    rmFav: (state, action) => {\n      state.fav = state.fav.filter(fav => fav.imdbID !== action.payload.imdbID);\n    }\n  }\n});\nexport const {\n  addFav,\n  rmFav\n} = favSlice.actions;\nexport const getFav = state => state.favourites.fav;\nexport default favSlice.reducer;","map":{"version":3,"sources":["/home/belka/JS Projects/OMDB-React-Redux/src/features/favouritesSlice.js"],"names":["createAsyncThunk","createSlice","initialState","fav","favSlice","name","reducers","addFav","state","action","console","log","filter","imdbID","payload","push","rmFav","actions","getFav","favourites","reducer"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,GAAG,EAAE;AADc,CAArB;AAIA,MAAMC,QAAQ,GAAGH,WAAW,CAAC;AAC3BI,EAAAA,IAAI,EAAE,YADqB;AAE3BH,EAAAA,YAF2B;AAG3BI,EAAAA,QAAQ,EAAE;AACRC,IAAAA,MAAM,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACL,GAAlB;;AACA,UAAIK,KAAK,CAACL,GAAN,CAAUS,MAAV,CAAkBT,GAAD,IAASA,GAAG,CAACU,MAAJ,KAAeJ,MAAM,CAACK,OAAP,CAAeD,MAAxD,CAAJ,EAAqE;AACnEL,QAAAA,KAAK,CAACL,GAAN,CAAUY,IAAV,CAAeN,MAAM,CAACK,OAAtB;AACD,OAJwB,CAMzB;;AACD,KARO;AASRE,IAAAA,KAAK,EAAE,CAACR,KAAD,EAAQC,MAAR,KAAmB;AACxBD,MAAAA,KAAK,CAACL,GAAN,GAAYK,KAAK,CAACL,GAAN,CAAUS,MAAV,CACTT,GAAD,IAASA,GAAG,CAACU,MAAJ,KAAeJ,MAAM,CAACK,OAAP,CAAeD,MAD7B,CAAZ;AAGD;AAbO;AAHiB,CAAD,CAA5B;AAoBA,OAAO,MAAM;AAAEN,EAAAA,MAAF;AAAUS,EAAAA;AAAV,IAAoBZ,QAAQ,CAACa,OAAnC;AACP,OAAO,MAAMC,MAAM,GAAIV,KAAD,IAAWA,KAAK,CAACW,UAAN,CAAiBhB,GAA3C;AACP,eAAeC,QAAQ,CAACgB,OAAxB","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  fav: [],\n};\n\nconst favSlice = createSlice({\n  name: \"favourites\",\n  initialState,\n  reducers: {\n    addFav: (state, action) => {\n      console.log(state.fav)\n      if (state.fav.filter((fav) => fav.imdbID !== action.payload.imdbID)) {\n        state.fav.push(action.payload);\n      }\n\n      // state.fav =  [... state.fav , action.payload]\n    },\n    rmFav: (state, action) => {\n      state.fav = state.fav.filter(\n        (fav) => fav.imdbID !== action.payload.imdbID\n      );\n    },\n  },\n});\n\nexport const { addFav, rmFav } = favSlice.actions;\nexport const getFav = (state) => state.favourites.fav;\nexport default favSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}