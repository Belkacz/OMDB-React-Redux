{"ast":null,"code":"var _jsxFileName = \"/home/belka/JS Projects/OMDB-React-Redux/src/components/MovieComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Routes, Route, Outlet, Link } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport { addMovies } from \"../features/getMovieSlice\";\nimport { getSearch } from \"../features/searchSlice\";\nimport MovieList from \"./MovieList\";\nimport FavList from \"./FavouritesList\";\nimport MovieListHeading from \"./MovieListHeading\";\nimport Search from \"./Search\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MovieComponent() {\n  _s();\n\n  const APIKEY = \"5abb4eb6\"; // const [movies, setMovies] = useState([]);\n  // const [searchValue, setSearchValue] = useState(\"\");\n\n  const dispatch = useDispatch();\n  const search = useSelector(getSearch);\n\n  const getMovieRequest = async search => {\n    const url = `http://www.omdbapi.com/?s=${search}&apikey=${APIKEY}`;\n    const respose = await fetch(url);\n    const responseJson = await respose.json();\n\n    if (responseJson.Search) {\n      dispatch(addMovies(responseJson.Search)); // setMovies(responseJson.Search);\n    }\n  };\n\n  const testdata = {\n    Title: \"Star Wars\",\n    Year: \"1977\",\n    imdbID: \"tt0076759\",\n    Type: \"movie\",\n    Poster: \"https://m.media-amazon.com/images/M/MV5BNzVlY2MwMjktM2E4OS00Y2Y3LWE3ZjctYzhkZGM3YzA1ZWM2XkEyXkFqcGdeQXVyNzkwMjQ5NzM@._V1_SX300.jpg\"\n  };\n  const urltest = \"http://www.omdbapi.com/?s=star-wars&apikey=5abb4eb6\";\n  useEffect(() => {\n    // const fetchMovies = async () => {\n    //   const response = await fetch(url);\n    //   const responseJson = await response.json();\n    //   // dispatch(addMovies(responseJson.Search));\n    //   dispatch(addMovies(testdata));\n    // };\n    // fetchMovies();\n    getMovieRequest(search);\n  }, [search]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row d-flex algin-items-center mt-4 mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(MovieListHeading, {\n        heading: \"Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row d-flex algin-items-center mt-4 mb-4\",\n      children: /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex \",\n      children: /*#__PURE__*/_jsxDEV(MovieList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Favourites\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" d-flex\",\n      children: /*#__PURE__*/_jsxDEV(FavList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Layout, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 34\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          index: true,\n          element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"MovieList\",\n          element: /*#__PURE__*/_jsxDEV(MovieList, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"dashboard\",\n          element: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(NoMatch, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MovieComponent, \"U+owIvwRO8zxjXxWX1WAoRHikkc=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = MovieComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieComponent\");","map":{"version":3,"sources":["/home/belka/JS Projects/OMDB-React-Redux/src/components/MovieComponent.js"],"names":["React","useState","useEffect","Routes","Route","Outlet","Link","useDispatch","useSelector","addMovies","getSearch","MovieList","FavList","MovieListHeading","Search","MovieComponent","APIKEY","dispatch","search","getMovieRequest","url","respose","fetch","responseJson","json","testdata","Title","Year","imdbID","Type","Poster","urltest"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Routes, Route, Outlet, Link } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport { addMovies } from \"../features/getMovieSlice\";\nimport { getSearch } from \"../features/searchSlice\";\nimport MovieList from \"./MovieList\";\nimport FavList from \"./FavouritesList\";\nimport MovieListHeading from \"./MovieListHeading\";\nimport Search from \"./Search\";\n\n\n\nexport default function MovieComponent() {\n  const APIKEY = \"5abb4eb6\";\n  // const [movies, setMovies] = useState([]);\n  // const [searchValue, setSearchValue] = useState(\"\");\n\n  const dispatch = useDispatch();\n  const search = useSelector(getSearch);\n  const getMovieRequest = async (search) => {\n    const url = `http://www.omdbapi.com/?s=${search}&apikey=${APIKEY}`;\n    const respose = await fetch(url);\n    const responseJson = await respose.json();\n    if (responseJson.Search) {\n\n      dispatch(addMovies(responseJson.Search));\n      // setMovies(responseJson.Search);\n    }\n  };\n  const testdata = {\n    Title: \"Star Wars\",\n    Year: \"1977\",\n    imdbID: \"tt0076759\",\n    Type: \"movie\",\n    Poster:\n      \"https://m.media-amazon.com/images/M/MV5BNzVlY2MwMjktM2E4OS00Y2Y3LWE3ZjctYzhkZGM3YzA1ZWM2XkEyXkFqcGdeQXVyNzkwMjQ5NzM@._V1_SX300.jpg\",\n  };\n  const urltest = \"http://www.omdbapi.com/?s=star-wars&apikey=5abb4eb6\";\n\n  useEffect(() => {\n    // const fetchMovies = async () => {\n    //   const response = await fetch(url);\n    //   const responseJson = await response.json();\n\n    //   // dispatch(addMovies(responseJson.Search));\n    //   dispatch(addMovies(testdata));\n    // };\n    // fetchMovies();\n    getMovieRequest(search);\n  }, [search]);\n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row d-flex algin-items-center mt-4 mb-4\">\n        <MovieListHeading heading=\"Movies\" />\n        <br></br>\n      </div>\n      <div className=\"row d-flex algin-items-center mt-4 mb-4\">\n        <Search />\n        {/* searchValue={searchValue} setSearchValue={setSearchValue} */}\n      </div>\n      <div className=\"d-flex \">\n        <MovieList />\n      </div>\n      <br></br>\n      <div>\n        <h2>Favourites</h2>\n      </div>\n      <div className=\" d-flex\">\n        <FavList />\n      </div>\n      <Routes>\n        <Route path=\"/\" element={<Layout />}>\n          <Route index element={<Home />} />\n          <Route path=\"MovieList\" element={<MovieList />} />\n          <Route path=\"dashboard\" element={<Dashboard />} />\n\n          {/* Using path=\"*\"\" means \"match anything\", so this route\n                acts like a catch-all for URLs that we don't have explicit\n                routes for. */}\n          <Route path=\"*\" element={<NoMatch />} />\n        </Route>\n      </Routes>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}