{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nconst APIKEY = \"5abb4eb6\";\nexport const getMovieAsynch = createAsyncThunk(async searchValue => {\n  const url = `http://www.omdbapi.com/?s=star-wars&apikey=5abb4eb6`;\n  const response = await fetch(url);\n  const responseJson = await response.json();\n  return responseJson; //   return response.data;\n});\nconsole.log(getMovieAsynch);\nconst movieSlice = createSlice({\n  name: \"getMovie\",\n  initialState: {\n    list: [],\n    status: null\n  },\n  reducers: {\n    showMovies: state => {\n      return state;\n    }\n  },\n  extraReducers: {\n    [getMovieAsynch.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [getMovieAsynch.fulfilled]: (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      state.list = payload;\n      state.status = \"success\";\n    },\n    [getMovieAsynch.rejected]: (state, action) => {\n      state.status = \"failed\";\n    }\n  }\n});\nexport default movieSlice.reducer;","map":{"version":3,"sources":["/home/belka/JS Projects/omdb-react-redux/src/features/getMovieSlice.js"],"names":["createAsyncThunk","createSlice","APIKEY","getMovieAsynch","searchValue","url","response","fetch","responseJson","json","console","log","movieSlice","name","initialState","list","status","reducers","showMovies","state","extraReducers","pending","action","fulfilled","payload","rejected","reducer"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AAGA,MAAMC,MAAM,GAAG,UAAf;AAEA,OAAO,MAAMC,cAAc,GAAGH,gBAAgB,CAAC,MAAOI,WAAP,IAAuB;AACpE,QAAMC,GAAG,GAAI,qDAAb;AACA,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,QAAMG,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA3B;AACA,SAAOD,YAAP,CAJoE,CAKpE;AACD,CAN6C,CAAvC;AAOPE,OAAO,CAACC,GAAR,CAAYR,cAAZ;AAEA,MAAMS,UAAU,GAAGX,WAAW,CAAC;AAC7BY,EAAAA,IAAI,EAAE,UADuB;AAE7BC,EAAAA,YAAY,EAAE;AAAEC,IAAAA,IAAI,EAAE,EAAR;AAAYC,IAAAA,MAAM,EAAE;AAApB,GAFe;AAG3BC,EAAAA,QAAQ,EAAC;AACPC,IAAAA,UAAU,EAAGC,KAAD,IAAU;AAClB,aAAOA,KAAP;AACH;AAHM,GAHkB;AAQ7BC,EAAAA,aAAa,EAAE;AACb,KAACjB,cAAc,CAACkB,OAAhB,GAA0B,CAACF,KAAD,EAAQG,MAAR,KAAmB;AAC3CH,MAAAA,KAAK,CAACH,MAAN,GAAe,SAAf;AACD,KAHY;AAIb,KAACb,cAAc,CAACoB,SAAhB,GAA4B,CAACJ,KAAD,WAAwB;AAAA,UAAhB;AAAEK,QAAAA;AAAF,OAAgB;AAClDL,MAAAA,KAAK,CAACJ,IAAN,GAAaS,OAAb;AACAL,MAAAA,KAAK,CAACH,MAAN,GAAe,SAAf;AACD,KAPY;AAQb,KAACb,cAAc,CAACsB,QAAhB,GAA2B,CAACN,KAAD,EAAQG,MAAR,KAAmB;AAC5CH,MAAAA,KAAK,CAACH,MAAN,GAAe,QAAf;AACD;AAVY;AARc,CAAD,CAA9B;AAsBA,eAAeJ,UAAU,CAACc,OAA1B","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n\n\nconst APIKEY = \"5abb4eb6\";\n\nexport const getMovieAsynch = createAsyncThunk(async (searchValue) => {\n  const url = `http://www.omdbapi.com/?s=star-wars&apikey=5abb4eb6`;\n  const response = await fetch(url);\n  const responseJson = await response.json();\n  return responseJson;\n  //   return response.data;\n});\nconsole.log(getMovieAsynch);\n\nconst movieSlice = createSlice({\n  name: \"getMovie\",\n  initialState: { list: [], status: null },\n    reducers:{\n      showMovies: (state) =>{\n          return state\n      }\n    },\n  extraReducers: {\n    [getMovieAsynch.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [getMovieAsynch.fulfilled]: (state, { payload }) => {\n      state.list = payload;\n      state.status = \"success\";\n    },\n    [getMovieAsynch.rejected]: (state, action) => {\n      state.status = \"failed\";\n    },\n  },\n});\n\nexport default movieSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}