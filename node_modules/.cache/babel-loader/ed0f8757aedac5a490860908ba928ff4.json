{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  fav: []\n};\nconst favSlice = createSlice({\n  name: \"favourites\",\n  initialState,\n  reducers: {\n    addFav: (state, action) => {\n      if (state.fav !== action.payload) {}\n\n      state.fav.push(action.payload); // state.fav =  [... state.fav , action.payload]\n    },\n    rmFav: (state, action) => {\n      state.fav = state.fav.filter(fav => fav.imdbID !== action.payload.imdbID);\n    }\n  }\n});\nexport const {\n  addFav,\n  rmFav\n} = favSlice.actions;\nexport const getFav = state => state.favourites.fav;\nexport default favSlice.reducer;","map":{"version":3,"sources":["/home/belka/JS Projects/OMDB-React-Redux/src/features/favouritesSlice.js"],"names":["createAsyncThunk","createSlice","initialState","fav","favSlice","name","reducers","addFav","state","action","payload","push","rmFav","filter","imdbID","actions","getFav","favourites","reducer"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,GAAG,EAAE;AADc,CAArB;AAIA,MAAMC,QAAQ,GAAGH,WAAW,CAAC;AAC3BI,EAAAA,IAAI,EAAE,YADqB;AAE3BH,EAAAA,YAF2B;AAG3BI,EAAAA,QAAQ,EAAE;AACRC,IAAAA,MAAM,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACzB,UAAGD,KAAK,CAACL,GAAN,KAAcM,MAAM,CAACC,OAAxB,EAAgC,CAAE;;AAClCF,MAAAA,KAAK,CAACL,GAAN,CAAUQ,IAAV,CAAeF,MAAM,CAACC,OAAtB,EAFyB,CAGzB;AACD,KALO;AAMRE,IAAAA,KAAK,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AACxBD,MAAAA,KAAK,CAACL,GAAN,GAAYK,KAAK,CAACL,GAAN,CAAUU,MAAV,CAAkBV,GAAD,IAAQA,GAAG,CAACW,MAAJ,KAAeL,MAAM,CAACC,OAAP,CAAeI,MAAvD,CAAZ;AACD;AARO;AAHiB,CAAD,CAA5B;AAeA,OAAO,MAAM;AAAEP,EAAAA,MAAF;AAAUK,EAAAA;AAAV,IAAoBR,QAAQ,CAACW,OAAnC;AACP,OAAO,MAAMC,MAAM,GAAIR,KAAD,IAAWA,KAAK,CAACS,UAAN,CAAiBd,GAA3C;AACP,eAAeC,QAAQ,CAACc,OAAxB","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  fav: [],\n};\n\nconst favSlice = createSlice({\n  name: \"favourites\",\n  initialState,\n  reducers: {\n    addFav: (state, action) => {\n      if(state.fav !== action.payload){}\n      state.fav.push(action.payload)\n      // state.fav =  [... state.fav , action.payload]\n    },\n    rmFav: (state, action) => {\n      state.fav = state.fav.filter((fav)=> fav.imdbID !== action.payload.imdbID)\n    },\n  },\n});\n\nexport const { addFav, rmFav } = favSlice.actions;\nexport const getFav = (state) => state.favourites.fav;\nexport default favSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}