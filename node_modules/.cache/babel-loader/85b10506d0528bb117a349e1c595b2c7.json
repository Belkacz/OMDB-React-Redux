{"ast":null,"code":"var _jsxFileName = \"/home/belka/JS Projects/OMDB-React-Redux/src/components/MovieComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport MovieList from \"./MovieList\";\nimport MovieListHeading from \"./MovieListHeading\";\nimport Search from \"./Search\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { useDispatch } from \"react-redux\";\nimport { getMovieAsynch } from \"../features/getMovieSlice\";\nimport { addMovies } from \"../features/getMovieSlice\";\nimport { useSelector } from \"react-redux\";\nimport { getSearch } from \"../features/searchSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MovieComponent() {\n  _s();\n\n  const APIKEY = \"5abb4eb6\";\n  const [movies, setMovies] = useState([]);\n  const [searchValue, setSearchValue] = useState(\"\");\n  const dispatch = useDispatch();\n  const search = useSelector(getSearch);\n  console.log(search);\n\n  const getMoveieRequest = async search => {\n    const url = `http://www.omdbapi.com/?s=${search}&apikey=${APIKEY}`;\n    const respose = await fetch(url);\n    const responseJson = await respose.json();\n\n    if (responseJson.Search) {\n      console.log(esponseJson.Search);\n      dispatch(addMovies(responseJson.Search)); // setMovies(responseJson.Search);\n    }\n  };\n\n  const testdata = {\n    Title: \"Star Wars\",\n    Year: \"1977\",\n    imdbID: \"tt0076759\",\n    Type: \"movie\",\n    Poster: \"https://m.media-amazon.com/images/M/MV5BNzVlY2MwMjktM2E4OS00Y2Y3LWE3ZjctYzhkZGM3YzA1ZWM2XkEyXkFqcGdeQXVyNzkwMjQ5NzM@._V1_SX300.jpg\"\n  };\n  const urltest = \"http://www.omdbapi.com/?s=star-wars&apikey=5abb4eb6\";\n  useEffect(search => {\n    // const fetchMovies = async () => {\n    //   const response = await fetch(url);\n    //   const responseJson = await response.json();\n    //   console.log(responseJson);\n    //   // dispatch(addMovies(responseJson.Search));\n    //   dispatch(addMovies(testdata));\n    // };\n    // fetchMovies();\n    getMoveieRequest(search);\n  }, [search]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row d-flex algin-items-center mt-4 mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(MovieListHeading, {\n        heading: \"Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row d-flex algin-items-center mt-4 mb-4\",\n      children: /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex  mr-5\",\n      children: /*#__PURE__*/_jsxDEV(MovieList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MovieComponent, \"aM2tchOn5kruOUh5448X5UklXt4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = MovieComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieComponent\");","map":{"version":3,"sources":["/home/belka/JS Projects/OMDB-React-Redux/src/components/MovieComponent.js"],"names":["React","useState","useEffect","MovieList","MovieListHeading","Search","useDispatch","getMovieAsynch","addMovies","useSelector","getSearch","MovieComponent","APIKEY","movies","setMovies","searchValue","setSearchValue","dispatch","search","console","log","getMoveieRequest","url","respose","fetch","responseJson","json","esponseJson","testdata","Title","Year","imdbID","Type","Poster","urltest"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,sCAAP;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,SAASC,SAAT,QAA0B,2BAA1B;AACA,SAASC,WAAT,QAA2B,aAA3B;AACA,SAASC,SAAT,QAA0B,yBAA1B;;AAGA,eAAe,SAASC,cAAT,GAA0B;AAAA;;AACvC,QAAMC,MAAM,GAAG,UAAf;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACc,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC,EAAD,CAA9C;AAEA,QAAMgB,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAMY,MAAM,GAAGT,WAAW,CAACC,SAAD,CAA1B;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,QAAMG,gBAAgB,GAAG,MAAOH,MAAP,IAAkB;AACzC,UAAMI,GAAG,GAAI,6BAA4BJ,MAAO,WAAUN,MAAO,EAAjE;AACA,UAAMW,OAAO,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA3B;AACA,UAAMG,YAAY,GAAG,MAAMF,OAAO,CAACG,IAAR,EAA3B;;AACA,QAAID,YAAY,CAACpB,MAAjB,EAAyB;AACvBc,MAAAA,OAAO,CAACC,GAAR,CAAYO,WAAW,CAACtB,MAAxB;AACAY,MAAAA,QAAQ,CAACT,SAAS,CAACiB,YAAY,CAACpB,MAAd,CAAV,CAAR,CAFuB,CAGvB;AACD;AACF,GATD;;AAUA,QAAMuB,QAAQ,GAAG;AACfC,IAAAA,KAAK,EAAE,WADQ;AAEfC,IAAAA,IAAI,EAAE,MAFS;AAGfC,IAAAA,MAAM,EAAE,WAHO;AAIfC,IAAAA,IAAI,EAAE,OAJS;AAKfC,IAAAA,MAAM,EACJ;AANa,GAAjB;AAQA,QAAMC,OAAO,GAAG,qDAAhB;AAEAhC,EAAAA,SAAS,CAAEgB,MAAD,IAAY;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAG,IAAAA,gBAAgB,CAACH,MAAD,CAAhB;AACD,GAVQ,EAUN,CAACA,MAAD,CAVM,CAAT;AAYA,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,yCAAf;AAAA,8BACE,QAAC,gBAAD;AAAkB,QAAA,OAAO,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAK,MAAA,SAAS,EAAC,yCAAf;AAAA,6BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YALF,eASE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAvDuBP,c;UAKLL,W,EACFG,W;;;KANOE,c","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport MovieList from \"./MovieList\";\nimport MovieListHeading from \"./MovieListHeading\";\nimport Search from \"./Search\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { useDispatch } from \"react-redux\";\nimport { getMovieAsynch } from \"../features/getMovieSlice\";\nimport { addMovies } from \"../features/getMovieSlice\";\nimport { useSelector} from \"react-redux\"\nimport { getSearch } from \"../features/searchSlice\"\n\n\nexport default function MovieComponent() {\n  const APIKEY = \"5abb4eb6\";\n  const [movies, setMovies] = useState([]);\n  const [searchValue, setSearchValue] = useState(\"\");\n\n  const dispatch = useDispatch();\n  const search = useSelector(getSearch);\n  console.log(search)\n  const getMoveieRequest = async (search) => {\n    const url = `http://www.omdbapi.com/?s=${search}&apikey=${APIKEY}`;\n    const respose = await fetch(url);\n    const responseJson = await respose.json();\n    if (responseJson.Search) {\n      console.log(esponseJson.Search)\n      dispatch(addMovies(responseJson.Search));\n      // setMovies(responseJson.Search);\n    }\n  };\n  const testdata = {\n    Title: \"Star Wars\",\n    Year: \"1977\",\n    imdbID: \"tt0076759\",\n    Type: \"movie\",\n    Poster:\n      \"https://m.media-amazon.com/images/M/MV5BNzVlY2MwMjktM2E4OS00Y2Y3LWE3ZjctYzhkZGM3YzA1ZWM2XkEyXkFqcGdeQXVyNzkwMjQ5NzM@._V1_SX300.jpg\",\n  };\n  const urltest = \"http://www.omdbapi.com/?s=star-wars&apikey=5abb4eb6\";\n\n  useEffect((search) => {\n    // const fetchMovies = async () => {\n    //   const response = await fetch(url);\n    //   const responseJson = await response.json();\n    //   console.log(responseJson);\n    //   // dispatch(addMovies(responseJson.Search));\n    //   dispatch(addMovies(testdata));\n    // };\n    // fetchMovies();\n    getMoveieRequest(search)\n  }, [search]);\n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row d-flex algin-items-center mt-4 mb-4\">\n        <MovieListHeading heading=\"Movies\" />\n        <br></br>\n      </div>\n      <div className=\"row d-flex algin-items-center mt-4 mb-4\">\n        <Search  />\n        {/* searchValue={searchValue} setSearchValue={setSearchValue} */}\n      </div>\n      <div className=\"d-flex  mr-5\">\n        <MovieList  />\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}